FRONT-END DESIGN ENGINEERING

(01/12)

Para a Sprint 03 deste Challenge, as páginas desenvolvidas na Sprint 02 servirão de base para reestruturação e novas 

funcionalidades. 

A equipe deverá utilizar REACT + VITE + TypeScript, promovendo uma arquitetura modular e uma aplicação Single Page 

Application (SPA). Este ambiente permitirá maior componentização e eficiência no desenvolvimento, além de fortalecer a 

escalabilidade do projeto.

O objetivo é proporcionar uma experiência de usuário coesa e responsiva em todos os dispositivos, com foco em 

acessibilidade e usabilidade. Também será essencial seguir os padrões técnicos estabelecidos, utilizando GitHub para o 

versionamento. Essa prática garantirá o registro detalhado das alterações e facilitará a colaboração eficaz entre os integrantes 

da equipe.

Para esta etapa vamos utilizar REACT + VITE + TYPESCRIPT.

I

T
N
R
P
S
º
3
-
A
G
E
R
T
N
E

 
 
 
FRONT-END DESIGN ENGINEERING

(02/12)

▪ Criação de Conta de Equipe

✓ A EQUIPE deverá entregar o link do repositório na plataforma GITHUB ao professor responsável, para que a correção possa ser 

efetuada.

▪ Definição de Páginas do Projeto

✓ TODAS as páginas obrigatórias da Sprint 02, além das páginas adicionais criadas pela equipe, deverão ser reestruturadas em 

REACT + VITE + TypeScript seguindo o conceito de componentização. Essa abordagem trará modularidade e escalabilidade ao 

projeto, permitindo componentes reutilizáveis e uma estrutura de fácil manutenção e crescimento. 

✓ O objetivo é transformar o HTML da Sprint 02 em uma Single-Page Application (SPA), com uma estrutura semântica e responsiva e 

navegação entre páginas por rotas. Esse projeto seguirá as melhores práticas discutidas em sala de aula, o versionamento no GitHub 

documentará o progresso, garantindo uma experiência de usuário coesa em diversos dispositivos.

A NÃO ENTREGA DE PÁGINAS OBRIGATÓRIAS ACARRETARÁ EM PENALIDADES!

I

T
N
R
P
S
º
3
-
A
G
E
R
T
N
E

 
 
 
FRONT-END DESIGN ENGINEERING

(03/12)

ALGUMAS REGRAS (2/3)

▪

Integrações

✓ A aplicação NÃO necessita, neste momento de integração com uma API. Contudo, se houver elementos interativos de entrada de 

dados do usuário, devem ser obrigatoriamente implementados e validados através de HookForms. Ex: formulários de cadastro, 

campos de pesquisa etc. Lembrando que agora utilizamos Typescript e todo o código deve seguir este padrão.

✓ Nesta Sprint, não teremos integrações com outras disciplinas.

▪ Proibições

✓ É estritamente proibido o uso de bibliotecas, frameworks, templates ou exercícios fornecidos durante as aulas. O descumprimento dessa 

norma resultará automaticamente na atribuição de nota ZERO para a equipe. Ex: Axios, BootStrap etc.

I

T
N
R
P
S
º
3
-
A
G
E
R
T
N
E

 
 
 
FRONT-END DESIGN ENGINEERING

(04/12)

ALGUMAS REGRAS (3/3)

▪ Observações

✓ A estilização deve ser realizada utilizando apenas TAILWINDCSS.

I

T
N
R
P
S
º
3
-
A
G
E
R
T
N
E

✓ O versionamento deve estar presente no projeto. É obrigatório utilizar o GIT/GITHUB/GITFLOW para realizar o versionamento, todos

os integrantes devem participar do trabalho, sendo possível ver esta participação através do histórico de commits, por isso o mínimo

de commit por aluno é 5 e o total de commits do projeto é 15.

✓ À entrega do projeto deve ser realizada em formato .zip, sem a pasta node_modules e com o histórico de versionamento, isso quer

dizer que deve ser entregue uma cópia do repositório do projeto contend a branch main e não apenas os arquivos do projetos.

✓ Utilizar o README.md do projeto para apresentar as informações importantes de desenvolvimento do projeto até este, além das 

informações obrigatórias . Estilizar com MARKDOWN este arquivo para que ele seja o indicador e orientador do projeto no 

repositório.

 
 
 
FRONT-END DESIGN ENGINEERING

(05/12)

CRITÉRIOS DE AVALIAÇAO E PONTUAÇÃO (1/5)

1. CONSTRUÇÃO DO PROJETO DE ACORDO COM A SPRINT 02 (40,0 pontos)

• Desenvolvimento dos documentos HTML reestruturados em REACT + VITE + TYPESCRIPT.

I

T
N
R
P
S
º
3
-
A
G
E
R
T
N
E

I.

COMPONENTIZAÇÃO, MODULARIDADE E REUTILIZAÇÃO DAS PÁGINAS DA SPRINT 02 (20,0 pontos)

a.

Componentização (10,0 pontos)

i.

É obrigatório entregar todos os documentos HTML da Sprint 02 reestruturados utilizando REACT + VITE + TYPESCRIPT. A reescrita deve seguir os conceitos 

de componentização e a arquitetura de uma aplicação SPA (Single Page Application), garantindo uma estrutura semântica e responsiva, definindo de forma 

clara e funcional dos componentes/funções principais, considerando boas práticas e tipagem do código. A não entrega dos arquivos da Sprint 02, conforme 

os requisitos estabelecidos, resultará em penalidades, impactando diretamente na avaliação do projeto. (10,0 pontos)

b.

Modularidade e Reutilização (10,0 pontos)

i.

ii.

Identificação e separação clara de componentes,  REACT + VITE + TYPESCRIPT. (3,3 pontos)

Facilidade de reutilização de elementos em diferentes partes do projeto. (3,3 pontos)

iii.

Eficiência na manutenção e atualização de componentes. (3,4 pontos)

 
 
 
FRONT-END DESIGN ENGINEERING

(06/12)

CRITÉRIOS DE AVALIAÇAO E PONTUAÇÃO (2/5)

1. CONSTRUÇÃO DO PROJETO DE ACORDO COM A SPRINT 02 (40,0 pontos)

• Desenvolvimento dos documentos HTML reestruturados em REACT + VITE + TYPESCRIPT.

I.

UTILIZAÇÃO DE HOOKS, PROPS E ROTAS (20,0 pontos)

a.

Hooks, Props, e Rotas (20,0 pontos)

i.

ii.

iii.

iv.

v.

vi.

Utilização de useState(). (2,5 pontos)

Utilização de useNavigate(). (2,5 pontos)

Utilização de useParams(). (2,5 pontos)

Utilização de useEffect(). (2,5 pontos)

Utilização de Props. (5,0 pontos)

Utilização de rotas estáticas / Dinâmicas. (5,0 pontos)

I

T
N
R
P
S
º
3
-
A
G
E
R
T
N
E

 
 
 
FRONT-END DESIGN ENGINEERING

(07/12)

CRITÉRIOS DE AVALIAÇAO E PONTUAÇÃO (3/5)

2.     ESTILIZAÇÃO E RESPONSIVIDADE COM TAILWIND (35,0 pontos)

I.

Estilização (10,0 pontos)

a.

Escolha de Cores e Fontes (5,0 pontos)

i.

Coerência e consistência das cores e fontes em todo projeto. (5,0 pontos)

b.

Atratividade do Design (5,0 pontos)

i.

Facilidade de navegação, interface amigável. (5,0 pontos)

II.

Responsividade (25,0 pontos)

A responsividade devem ser representadas em diferentes tamanhos de tela: eXtra Small devices ; SMall devices; MeDium devices; Large Devices e eXtra-

Large devices.

a.

Adaptabilidade (25,0 pontos)

i.

ii.

Funcionalidade e aparência adequada em diferentes dispositivos. (12,5 pontos)

Adequação do layout e conteúdo para diferentes tamanhos de tela. (12,5 pontos)

I

T
N
R
P
S
º
3
-
A
G
E
R
T
N
E

 
 
 
FRONT-END DESIGN ENGINEERING

(08/12)

CRITÉRIOS DE AVALIAÇAO E PONTUAÇÃO (4/5)

3.     VERSIONAMENTO DO PROJETO NO GITHUB (10,0 PONTOS)

I.

Criação de repositório (2,5 pontos)

Criação de um repositório no GitHub, para controle do projeto.

I

T
N
R
P
S
º
3
-
A
G
E
R
T
N
E

II.

Envio do link ao professor responsável (2,5 pontos)

Envio do link grupo no Item I, ao professor responsável pela disciplina em no arquivo README.MD.

III. Commits frequentes (2,5 pontos)

Realização de, no mínimo, 05 (cinco) commits significativos, por integrante, demonstrando a evolução do projeto.

IV. Participação da equipe (2,5 pontos)

Participação de todos os integrantes no repositório, com contribuições evidentes de cada membro da equipe.

 
 
 
FRONT-END DESIGN ENGINEERING

(09/12)

CRITÉRIOS DE AVALIAÇAO E PONTUAÇÃO (5/5)

4.     ARQUIVO README.MD (10,0 PONTOS)

I.

README.MD (10,0 pontos)

O grupo deve criar um arquivo README.MD, formatado de acordo com MD (MarkDown), apresentando:

a.

Todas as informações pertinentes para manipular o sistema. (3,4 pontos)

• Tecnologias

•

•

Integrantes

Imagens e ícones relacionadas ao projeto

• Estrutura de pastas do projeto

Link do GitHub  (3,3 pontos)

Link do Vídeo do YouTube  (3,3 pontos)

b.

c.

5.       VÍDEO (5,0 pontos)

I.

  Gravação de vídeo (5,0 pontos)

Grupo deverá gravar um vídeo de no máximo 3 minutos apresentando os recursos do projeto, telas, layout, o mesmo deve ser disponibilizado via link e 

hospedado no Youtube. (5,0 pontos)

I

T
N
R
P
S
º
3
-
A
G
E
R
T
N
E

 
 
 
FRONT-END DESIGN ENGINEERING

(10/12)

PENALIDADES (1/2)

I.

Arquivos maiores que 50 MB (-50,0 pontos) 

O arquivo .ZIP do projeto não deve exceder 50 MB.

II.

Para cada página OBRIGATÓRIA que faltar no projeto (-20,0 pontos)

I

T
N
R
P
S
º
3
-
A
G
E
R
T
N
E

•

A ausência de qualquer página obrigatória — Index/Home (Página Inicial), Integrantes, Sobre/About, FAQ (Perguntas Frequentes) ou Contato — 

resultará na perda de 20 pontos por página faltante no projeto.

III.

Falta de página de identificação dos integrantes (-20,0 pontos) 

A ausência de uma página com a identificação dos integrantes, incluindo nome, RM e turma, será penalizada.

IV. Para cada item de identificação da página dos integrantes que faltar (-30,0 pontos) 

A ausência de cada item da página dos integrantes abaixo:

•

•

•

Nome (-10,0 pontos) 

RM (-10,0 pontos)

Turma (-10,0 pontos) 

 
 
 
FRONT-END DESIGN ENGINEERING

(11/12)

PENALIDADES (2/2)

V.            Entrega da solução somente com link (-100,0 pontos)

Não serão aceitas soluções que contenham apenas o link do repositório para que o professor responsável faça o download da solução a partir do 

repositório. É necessário o envio o arquivo ZIPADO.

VI.

   Não entrega do link do GITHUB no README.md ( -50 pontos)

 Sem o link, não há como avaliar o versionamento, o trabalho colaborativo e a evolução do projeto. 

VII.      README.md (-50 pontos) 

A NÃO ENTREGA DO ARQUIVO README, OU A ENTREGA DE OUTRO TIPO DE ARQUIVO EM SEU LUGAR  ACARRETARÁ UMA PENALIDADE DE -50 

PONTOS AO GRUPO.

VIII.    Utilização de frameworks, CDNs e/ou qualquer tipo de arquivo externo a solução entregue (-100,0 pontos)

A utilização de frameworks e/ou soluções prontas, como AXIOS, CARROUSEL, ACORDION incluindo o Bootstrap, está estritamente proibida neste projeto.

Caso o professor responsável pela disciplina identifique a utilização desses recursos, a nota da SPRINT 03 da equipe será automaticamente ZERADA.

I

T
N
R
P
S
º
3
-
A
G
E
R
T
N
E

 
 
 
FRONT-END DESIGN ENGINEERING

(12/12)

ENTREGA

A equipe deve encaminhar ao professor responsável pela disciplina um arquivo ZIP contendo:

•

•

Compacte TODA a solução e encaminhe TUDO junto num único arquivo ZIP.

Lembre que o deve ser enviado é a cópia do repositório contendo todo o versionamento do projeto com as últimas atualizações, 

somente com branch main.

1. Não serão aceitas soluções que contenham apenas:

2. O link do repositório para que o professor responsável faça o download da solução a partir do repositório.

3. O projeto sem versionamento.

ONDE DEVE SER ENTREGUE

•

•

Portal do Auno

Anexe o arquivo do seu projeto referente a entrega escolhida. Lembre-se que somente o representante deve enviar o trabalho!! 

NÃO SERÃO ACEITAS ENTREGAS PELO TEAMS OU OUTRO MEIO DE COMUNICAÇÃO!!

I

T
N
R
P
S
º
3
-
A
G
E
R
T
N
E

 
 
 
